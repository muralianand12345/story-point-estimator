// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  rooms     RoomUser[]
  votes     Vote[]
}

model Room {
  id          String     @id @default(uuid())
  name        String
  roomCode    String     @unique
  createdById String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isActive    Boolean    @default(true)
  users       RoomUser[]
  stories     Story[]
}

model RoomUser {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model Story {
  id          String   @id @default(uuid())
  title       String
  description String?
  roomId      String
  isActive    Boolean  @default(true)
  isRevealed  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  room        Room     @relation(fields: [roomId], references: [id])
  votes       Vote[]
}

model Vote {
  id        String   @id @default(uuid())
  userId    String
  storyId   String
  value     String // The story point estimate (e.g., "1", "2", "3", "5", "8", "13")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  story     Story    @relation(fields: [storyId], references: [id])

  @@unique([userId, storyId])
}
